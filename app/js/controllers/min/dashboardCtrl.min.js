module.exports=function(e,n,a,o,t,s){function m(e){n.message=e,$(".popup_message").addClass("flash_popup"),s(function(){$(".popup_message").removeClass("flash_popup")},3e3)}var r=n;r.games=[],r.myGames=[],r.gameTemplates=[],n.newGame=[],n.currentUser=a.getUser(),n.newGameWindow_hidden=!0,e.getGameTemplates({onSuccess:function(e){angular.forEach(e.data,function(e,a){r.gameTemplates[a]=e.id,n.newGame.gameTemplate=r.gameTemplates[0]})},onError:function(e){m("Something went wrong with getting the templates"),console.log(e)}}),r.getAllGames=function(){e.getAllGames({onSuccess:function(e){angular.forEach(e.data,function(n,a){if(e.data[a].createdBy._id==r.currentUser.username)r.myGames[a]=n;else for(var o=0;o<e.data[a].players.length;o++)e.data[a].players[o]._id==r.currentUser.username?r.myGames[a]=n:r.games[a]=n})},onError:function(e){m("Something went wrong with getting the games"),console.log(e)}})},n.getAllGames(),r.joinGame=function(n){return n.players.length>=n.maxPlayers?(m("This game is full!"),void 0):(e.joinGame(n._id,{onSuccess:function(e){console.log(e),m("Game joined!"),r.getAllGames()},onError:function(e){console.log(e),m("Something went wrong with joining the game")}}),void 0)},r.openNewGame=function(){n.newGameWindow_hidden=!1},r.createNewGame=function(){if(isNaN(n.newGame.maxPlayers)||isNaN(n.newGame.minPlayers))return m("Please fill in a number!"),void 0;var a=parseInt(n.newGame.maxPlayers),o=parseInt(n.newGame.minPlayers),t={templateName:n.newGame.gameTemplate,minPlayers:o,maxPlayers:a};console.log(t),e.createGame(JSON.stringify(t),{onSuccess:function(e){m("Your game has been created!"),console.log(e),n.newGameWindow_hidden=!0},onError:function(e){m("Woops! we failed to create you game"),console.log(e)}})}};